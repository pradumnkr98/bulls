{"ast":null,"code":"var _jsxFileName = \"/Users/kraken/Desktop/bulls/src/screens/feeds/containers/Feeds.js\";\nimport React, { Component } from \"react\";\nimport Feeds from \"../components/Feeds\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SearchBar } from \"../../../shared/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FeedsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCommentChangeHandler = postId => {\n      this.setState({\n        flag: this.state.flag ? false : true\n      });\n    };\n\n    this.onLikeClickHandle = postId => {\n      const detail = {\n        userId: sessionStorage.getItem(\"uid\")\n      };\n      axios.post(\"http://localhost:8080/post/\" + postId + \"/like\", detail).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onCommentChangeHandler = event => {\n      let data = this.state.data;\n      data[event.target.name] = event.target.value;\n      this.setState({\n        data\n      });\n      console.log(data);\n    };\n\n    this.onCommentSubmitHandler = postId => {\n      console.log(\"Hello World\");\n      let details = {\n        userId: sessionStorage.getItem(\"uid\"),\n        comment: this.state.data.comment\n      };\n      axios.post('http://localhost:8080/post/' + postId + '/comments', details).then(response => {\n        console.log(response);\n\n        if (response.data.code == 200) {\n          this.setState({\n            flag: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      data: {},\n      posts: [],\n      flag: false,\n      addComment: {\n        comment: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/post/' + sessionStorage.getItem(\"uid\")).then(response => {\n      console.log(response);\n      this.setState({\n        posts: response.data.data.postsList\n      });\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      data,\n      posts,\n      flag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Feeds, {\n      posts: posts,\n      onLikeClickHandle: this.onLikeClickHandle,\n      onCommentClickHandle: this.onCommentChangeHandler,\n      onCommentChangeHandler: this.onCommentChangeHandler,\n      onCommentSubmitHandler: t,\n      flag: flag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default FeedsContainer;","map":{"version":3,"sources":["/Users/kraken/Desktop/bulls/src/screens/feeds/containers/Feeds.js"],"names":["React","Component","Feeds","axios","Redirect","SearchBar","FeedsContainer","constructor","props","onCommentChangeHandler","postId","setState","flag","state","onLikeClickHandle","detail","userId","sessionStorage","getItem","post","then","response","console","log","catch","error","event","data","target","name","value","onCommentSubmitHandler","details","comment","code","posts","addComment","componentDidMount","get","postsList","render","t"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Feeds from \"../components/Feeds\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SearchBar } from \"../../../shared/components\";\n\nclass FeedsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      posts: [],\n      flag: false,\n      addComment:{comment:\"\"}\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('http://localhost:8080/post/'+sessionStorage.getItem(\"uid\"))\n      .then((response) => {\n        console.log(response);\n        this.setState({ posts: response.data.data.postsList});\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onCommentChangeHandler = (postId) => {  \n    this.setState({ flag: this.state.flag?false:true });\n  };\n\n  onLikeClickHandle = (postId) => {\n    const detail = { userId: sessionStorage.getItem(\"uid\") };\n    axios\n      .post(\"http://localhost:8080/post/\" + postId + \"/like\", detail)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n  onCommentChangeHandler = (event) => {\n    let data = this.state.data;\n    data[event.target.name] = event.target.value;\n    this.setState({data});\n    console.log(data);\n  }\n\n  onCommentSubmitHandler = (postId) =>{\n    console.log(\"Hello World\");\n    let details = {userId:sessionStorage.getItem(\"uid\"),comment:this.state.data.comment}\n    axios.post('http://localhost:8080/post/'+postId+'/comments', details)\n    .then(response =>{\n        console.log(response);\n        if(response.data.code == 200){\n            this.setState({flag:true});\n        }\n    })\n    .catch(error =>{\n        console.log(error);\n    })\n}\n\n  render() {\n    const { data, posts, flag } = this.state;\n\n    return (\n      \n        <Feeds\n          posts={posts}\n          onLikeClickHandle={this.onLikeClickHandle}\n          onCommentClickHandle={this.onCommentChangeHandler}\n          onCommentChangeHandler = {this.onCommentChangeHandler}\n          onCommentSubmitHandler = {t}\n          flag={flag}\n        />\n    );\n  }\n}\n\nexport default FeedsContainer;\n"]},"metadata":{},"sourceType":"module"}