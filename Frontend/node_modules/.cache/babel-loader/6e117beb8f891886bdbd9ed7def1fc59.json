{"ast":null,"code":"var _jsxFileName = \"/Users/kraken/Desktop/bulls/src/screens/feeds/containers/Feeds.js\";\nimport React, { Component } from \"react\";\nimport Feeds from \"../components/Feeds\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FeedsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCommentClickHandle = (postId, id) => {\n      console.log(`${postId} ${id}`);\n      this.setState({\n        commentSelect: this.state.commentSelect === id ? \"\" : id\n      });\n    };\n\n    this.onLikeClickHandle = (postId, itemIndex) => {\n      const detail = {\n        userId: localStorage.getItem(\"uid\")\n      };\n      let {\n        liked\n      } = this.state;\n      axios.post(\"http://localhost:8080/post/\" + postId + \"/like\", detail).then(response => {\n        if (response.data.code === 200) {\n          liked[postId] = true;\n          let {\n            posts\n          } = this.state;\n          this.setState(liked);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onCommentChangeHandler = event => {\n      let data = this.state.addComment;\n      data[event.target.name] = event.target.value;\n\n      if (data[event.target.name] != \"\") {\n        this.setState({\n          istyping: true\n        });\n      } else {\n        this.setState({\n          istyping: false\n        });\n      }\n\n      this.setState({\n        data\n      });\n      console.log(data);\n    };\n\n    this.onCommentSubmitHandler = postId => {\n      let details = {\n        userId: localStorage.getItem(\"uid\"),\n        comment: this.state.data.comment\n      };\n      axios.post('http://localhost:8080/post/' + postId + '/comments', details).then(response => {\n        console.log(response);\n\n        if (response.data.code == 200) {\n          this.setState({\n            addComment: {\n              comment: \"\"\n            },\n            istyping: false\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onLoadCommentHandle = postId => {\n      axios.get(`http://localhost:8080/post/${postId}/comments`).then(response => {\n        console.log(response);\n\n        if (response.data.code == 200) {\n          this.setState({\n            comments: response.data.data\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      data: {},\n      posts: [],\n      comments: [],\n      commentSelect: \"\",\n      liked: {},\n      addComment: {\n        comment: \"\"\n      },\n      istyping: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/post/' + localStorage.getItem(\"uid\")).then(response => {\n      console.log(response);\n      this.setState({\n        posts: response.data.data.postsList\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // componentDidUpdate(){\n  //   axios\n  //     .get('http://localhost:8080/post/'+localStorage.getItem(\"uid\"))\n  //     .then((response) => {\n  //       console.log(response);\n  //       this.setState({ posts: response.data.data.postsList});\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }\n\n\n  getDate(date1, date2) {\n    let oned = 24 * 60 * 60 * 1000;\n    return Math.ceil((date2 - date1) / oned);\n  }\n\n  render() {\n    const {\n      data,\n      posts,\n      comments,\n      commentSelect,\n      liked,\n      flag,\n      addComment,\n      istyping\n    } = this.state;\n    console.log(comments);\n    return posts.map((post, itemIndex) => /*#__PURE__*/_jsxDEV(Feeds, {\n      itemIndex: itemIndex,\n      commentSelect: commentSelect,\n      liked: liked,\n      post: post,\n      onLikeClickHandle: this.onLikeClickHandle,\n      onCommentClickHandle: this.onCommentClickHandle,\n      onCommentChangeHandler: this.onCommentChangeHandler,\n      onCommentSubmitHandler: this.onCommentSubmitHandler,\n      addComment: addComment,\n      flag: flag,\n      comments: comments,\n      onLoadCommentHandle: this.onLoadCommentHandle,\n      istyping: istyping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this));\n  }\n\n}\n\nexport default FeedsContainer;","map":{"version":3,"sources":["/Users/kraken/Desktop/bulls/src/screens/feeds/containers/Feeds.js"],"names":["React","Component","Feeds","axios","FeedsContainer","constructor","props","onCommentClickHandle","postId","id","console","log","setState","commentSelect","state","onLikeClickHandle","itemIndex","detail","userId","localStorage","getItem","liked","post","then","response","data","code","posts","catch","error","onCommentChangeHandler","event","addComment","target","name","value","istyping","onCommentSubmitHandler","details","comment","onLoadCommentHandle","get","comments","componentDidMount","postsList","getDate","date1","date2","oned","Math","ceil","render","flag","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Feeds from \"../components/Feeds\";\nimport axios from \"axios\";\n\nclass FeedsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      posts: [],\n      comments:[],\n      commentSelect:\"\",\n      liked:{},\n      addComment:{comment:\"\"},\n      istyping:false,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('http://localhost:8080/post/'+localStorage.getItem(\"uid\"))\n      .then((response) => {\n        console.log(response);\n        this.setState({ posts: response.data.data.postsList});\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // componentDidUpdate(){\n  //   axios\n  //     .get('http://localhost:8080/post/'+localStorage.getItem(\"uid\"))\n  //     .then((response) => {\n  //       console.log(response);\n  //       this.setState({ posts: response.data.data.postsList});\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }\n\n  onCommentClickHandle = (postId, id) => {  \n    console.log( `${postId} ${id}`);\n    this.setState({ commentSelect: this.state.commentSelect === id ?\"\":id});\n  }\n\n  onLikeClickHandle = (postId, itemIndex) => {\n    const detail = { userId: localStorage.getItem(\"uid\") };\n    let {liked} = this.state;\n    axios\n      .post(\"http://localhost:8080/post/\" + postId + \"/like\", detail)\n      .then((response) => {\n        if(response.data.code === 200){\n          liked[postId] = true;\n          let {posts} = this.state;\n          \n          this.setState(liked)\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n  onCommentChangeHandler = (event) => {\n    let data = this.state.addComment;\n    data[event.target.name] = event.target.value;\n    if(data[event.target.name] != \"\"){\n      this.setState({istyping:true});\n    }else{\n      this.setState({istyping:false});\n    }\n    this.setState({data});\n    console.log(data);\n  }\n\n  onCommentSubmitHandler = (postId) =>{\n    let details = {userId:localStorage.getItem(\"uid\"),comment:this.state.data.comment}\n    axios.post('http://localhost:8080/post/'+postId+'/comments', details)\n    .then(response =>{\n        console.log(response);\n        if(response.data.code == 200){\n          this.setState({addComment:{comment : \"\"}, istyping:false});\n        }\n    })\n    .catch(error =>{\n        console.log(error);\n    })\n  }\n\n  onLoadCommentHandle = (postId) =>{\n    axios.get(`http://localhost:8080/post/${postId}/comments`)\n    .then(response =>{\n      console.log(response);\n      if(response.data.code == 200){\n        this.setState({comments:response.data.data})\n      }\n    })\n    .catch(error =>{\n      console.log(error);\n    })\n  }\n\n  getDate (date1, date2) {\n    let oned = 24 * 60 * 60 * 1000;\n    return Math.ceil((date2 - date1) / oned);\n  }\n\n  render() {\n    const { data, posts, comments, commentSelect, liked, flag, addComment, istyping} = this.state;\n    console.log(comments);\n    return (\n      \n      posts.map((post, itemIndex) => \n        <Feeds\n          itemIndex={itemIndex}\n          commentSelect={commentSelect}\n          liked={liked}\n          post={post}\n          onLikeClickHandle={this.onLikeClickHandle}\n          onCommentClickHandle={this.onCommentClickHandle}\n          onCommentChangeHandler = {this.onCommentChangeHandler}\n          onCommentSubmitHandler = {this.onCommentSubmitHandler}\n          addComment ={addComment}\n          flag={flag}\n          comments={comments}\n          onLoadCommentHandle={this.onLoadCommentHandle}\n          istyping = {istyping}\n\n        />)\n    );\n  }\n}\n\nexport default FeedsContainer;\n"]},"metadata":{},"sourceType":"module"}