{"ast":null,"code":"var _jsxFileName = \"/Users/kraken/Desktop/bulls/src/screens/feeds/containers/CreatePost.js\";\nimport React, { Children, Component } from \"react\";\nimport CreatePost from \"../components/CreatePost\";\nimport axios from \"axios\";\nimport { storage } from \"../../../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreatePostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitHandler = event => {\n      let temp = this.state.data;\n      let details = {\n        userId: localStorage.getItem(\"uid\"),\n        ...temp\n      };\n      axios.post(\"http://localhost:8080/post\", details).then(response => {\n        console.log(response);\n\n        if (response.data.code == 200) {\n          this.setState({\n            flag: true,\n            data: {},\n            isWriting: false\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onChangeHandler = event => {\n      let data = this.state.data;\n      data[event.target.name] = event.target.value;\n\n      if (data[event.target.name] != \"\") {\n        this.setState({\n          isWriting: true\n        });\n      } else {\n        this.setState({\n          isWriting: false\n        });\n      }\n\n      this.setState({\n        data\n      });\n      console.log(data);\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.files[0]);\n      let file = event.target.files[0];\n\n      if (file) {\n        this.setState({\n          image: file\n        });\n        let reader = new FileReader();\n        let url = reader.readAsDataURL(file);\n\n        reader.onloadend = function (e) {\n          this.setState({\n            imgSrc: [reader.result]\n          });\n        }.bind(this);\n\n        console.log(url);\n      }\n    };\n\n    this.handleUpload = () => {\n      this.setState({\n        isloaderActive: true\n      });\n      console.log(this.stateimage);\n      let image = this.state.image;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          let data = {\n            userId: localStorage.getItem(\"uid\"),\n            imageUrl: url\n          };\n          axios.post(`http://localhost:8080/post`, data).then(response => {\n            if (response.data.code === 200) {\n              alert(response.data.msg);\n              this.setState({\n                image: {},\n                imgSrc: \"\"\n              });\n              this.setr;\n            }\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      });\n    };\n\n    this.textClick = () => {\n      this.setState({\n        imageBool: false,\n        textBool: true\n      });\n    };\n\n    this.imageClick = () => {\n      this.setState({\n        imageBool: true,\n        textBool: false\n      });\n    };\n\n    this.state = {\n      data: {},\n      flag: false,\n      image: {},\n      imageBool: false,\n      textBool: true,\n      imgSrc: \"\",\n      isWriting: false,\n      isloaderActive: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      data,\n      flag,\n      image,\n      imageBool,\n      textBool,\n      imgSrc,\n      isWriting\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CreatePost, {\n      data: data,\n      onSubmitHandler: this.onSubmitHandler,\n      onChangeHandler: this.onChangeHandler,\n      handleUpload: this.handleUpload,\n      handleChange: this.handleChange,\n      imageBool: imageBool,\n      textBool: textBool,\n      textClick: this.textClick,\n      imageClick: this.imageClick,\n      imgSrc: imgSrc,\n      isWriting: isWriting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreatePostContainer;","map":{"version":3,"sources":["/Users/kraken/Desktop/bulls/src/screens/feeds/containers/CreatePost.js"],"names":["React","Children","Component","CreatePost","axios","storage","CreatePostContainer","constructor","props","onSubmitHandler","event","temp","state","data","details","userId","localStorage","getItem","post","then","response","console","log","code","setState","flag","isWriting","catch","error","onChangeHandler","target","name","value","handleChange","files","file","image","reader","FileReader","url","readAsDataURL","onloadend","e","imgSrc","result","bind","handleUpload","isloaderActive","stateimage","uploadTask","ref","put","on","snapshot","child","getDownloadURL","imageUrl","alert","msg","setr","textClick","imageBool","textBool","imageClick","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,eAnBmB,GAmBAC,KAAD,IAAW;AAC3B,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACA,UAAIC,OAAO,GAAG;AAAEC,QAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;AAAuC,WAAGN;AAA1C,OAAd;AACAP,MAAAA,KAAK,CACFc,IADH,CACQ,4BADR,EACsCJ,OADtC,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAIA,QAAQ,CAACP,IAAT,CAAcU,IAAd,IAAsB,GAA1B,EAA+B;AAC7B,eAAKC,QAAL,CAAc;AAAEC,YAAAA,IAAI,EAAE,IAAR;AAAeZ,YAAAA,IAAI,EAAC,EAApB;AAAuBa,YAAAA,SAAS,EAAC;AAAjC,WAAd;AACD;AACF,OAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OAVH;AAWD,KAjCkB;;AAAA,SAmCnBC,eAnCmB,GAmCAnB,KAAD,IAAW;AAC3B,UAAIG,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACAA,MAAAA,IAAI,CAACH,KAAK,CAACoB,MAAN,CAAaC,IAAd,CAAJ,GAA0BrB,KAAK,CAACoB,MAAN,CAAaE,KAAvC;;AACA,UAAGnB,IAAI,CAACH,KAAK,CAACoB,MAAN,CAAaC,IAAd,CAAJ,IAA0B,EAA7B,EAAgC;AAC9B,aAAKP,QAAL,CAAc;AAACE,UAAAA,SAAS,EAAC;AAAX,SAAd;AACD,OAFD,MAEK;AACH,aAAKF,QAAL,CAAc;AAACE,UAAAA,SAAS,EAAC;AAAX,SAAd;AACD;;AACD,WAAKF,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD,KA9CkB;;AAAA,SAgDnBoB,YAhDmB,GAgDHvB,KAAD,IAAW;AACxBW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACoB,MAAN,CAAaI,KAAb,CAAmB,CAAnB,CAAZ;AACA,UAAIC,IAAI,GAAGzB,KAAK,CAACoB,MAAN,CAAaI,KAAb,CAAmB,CAAnB,CAAX;;AACA,UAAIC,IAAJ,EAAU;AACR,aAAKX,QAAL,CAAc;AAAEY,UAAAA,KAAK,EAAED;AAAT,SAAd;AACA,YAAIE,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,YAAIC,GAAG,GAAGF,MAAM,CAACG,aAAP,CAAqBL,IAArB,CAAV;;AAEAE,QAAAA,MAAM,CAACI,SAAP,GAAmB,UAAUC,CAAV,EAAa;AAC5B,eAAKlB,QAAL,CAAc;AACVmB,YAAAA,MAAM,EAAE,CAACN,MAAM,CAACO,MAAR;AADE,WAAd;AAGD,SAJgB,CAIfC,IAJe,CAIV,IAJU,CAAnB;;AAKIxB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACD;AACN,KA/DkB;;AAAA,SAiEnBO,YAjEmB,GAiEJ,MAAM;AACnB,WAAKtB,QAAL,CAAc;AAACuB,QAAAA,cAAc,EAAC;AAAhB,OAAd;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK0B,UAAjB;AACA,UAAIZ,KAAK,GAAG,KAAKxB,KAAL,CAAWwB,KAAvB;AACA,YAAMa,UAAU,GAAG5C,OAAO,CAAC6C,GAAR,CAAa,UAASd,KAAK,CAACL,IAAK,EAAjC,EAAoCoB,GAApC,CAAwCf,KAAxC,CAAnB;AACAa,MAAAA,UAAU,CAACG,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI,CACX,CAHL,EAIIzB,KAAK,IAAI;AACLP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,OANL,EAOI,MAAM;AACFvB,QAAAA,OAAO,CACF6C,GADL,CACS,QADT,EAEKI,KAFL,CAEWlB,KAAK,CAACL,IAFjB,EAGKwB,cAHL,GAIKpC,IAJL,CAIUoB,GAAG,IAAI;AACTlB,UAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACA,cAAI1B,IAAI,GAAG;AACPE,YAAAA,MAAM,EAACC,YAAY,CAACC,OAAb,CAAqB,KAArB,CADA;AAEPuC,YAAAA,QAAQ,EAACjB;AAFF,WAAX;AAIAnC,UAAAA,KAAK,CAACc,IAAN,CAAY,4BAAZ,EAAyCL,IAAzC,EACCM,IADD,CACMC,QAAQ,IAAI;AACd,gBAAGA,QAAQ,CAACP,IAAT,CAAcU,IAAd,KAAuB,GAA1B,EAA8B;AAC5BkC,cAAAA,KAAK,CAACrC,QAAQ,CAACP,IAAT,CAAc6C,GAAf,CAAL;AACA,mBAAKlC,QAAL,CAAc;AAACY,gBAAAA,KAAK,EAAC,EAAP;AAAWO,gBAAAA,MAAM,EAAC;AAAlB,eAAd;AACA,mBAAKgB,IAAL;AACD;AACJ,WAPD,EAQChC,KARD,CAQOC,KAAK,IAAI;AACZP,YAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,WAVD;AAWH,SArBL;AAsBH,OA9BL;AAgCD,KAtGkB;;AAAA,SAwGnBgC,SAxGmB,GAwGP,MAAK;AACf,WAAKpC,QAAL,CAAc;AAACqC,QAAAA,SAAS,EAAC,KAAX;AAAkBC,QAAAA,QAAQ,EAAC;AAA3B,OAAd;AACD,KA1GkB;;AAAA,SA4GnBC,UA5GmB,GA4GN,MAAK;AAChB,WAAKvC,QAAL,CAAc;AAACqC,QAAAA,SAAS,EAAC,IAAX;AAAiBC,QAAAA,QAAQ,EAAC;AAA1B,OAAd;AACD,KA9GkB;;AAGjB,SAAKlD,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXY,MAAAA,IAAI,EAAE,KAFK;AAGXW,MAAAA,KAAK,EAAE,EAHI;AAIXyB,MAAAA,SAAS,EAAE,KAJA;AAKXC,MAAAA,QAAQ,EAAE,IALC;AAMXnB,MAAAA,MAAM,EAAC,EANI;AAOXjB,MAAAA,SAAS,EAAE,KAPA;AAQXqB,MAAAA,cAAc,EAAE;AARL,KAAb;AAUD;;AAEDiB,EAAAA,iBAAiB,GAAE,CAElB;;AA+FDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpD,MAAAA,IAAF;AAAQY,MAAAA,IAAR;AAAcW,MAAAA,KAAd;AAAqByB,MAAAA,SAArB;AAAgCC,MAAAA,QAAhC;AAA0CnB,MAAAA,MAA1C;AAAkDjB,MAAAA;AAAlD,QAA+D,KAAKd,KAA1E;AACA,wBACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,eAAe,EAAE,KAAKJ,eAFxB;AAGE,MAAA,eAAe,EAAE,KAAKoB,eAHxB;AAIE,MAAA,YAAY,EAAE,KAAKiB,YAJrB;AAKE,MAAA,YAAY,EAAE,KAAKb,YALrB;AAME,MAAA,SAAS,EAAI4B,SANf;AAOE,MAAA,QAAQ,EAAIC,QAPd;AAQE,MAAA,SAAS,EAAG,KAAKF,SARnB;AASE,MAAA,UAAU,EAAI,KAAKG,UATrB;AAUE,MAAA,MAAM,EAAIpB,MAVZ;AAWE,MAAA,SAAS,EAAIjB;AAXf;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAlIyC;;AAqI5C,eAAepB,mBAAf","sourcesContent":["import React, { Children, Component } from \"react\";\nimport CreatePost from \"../components/CreatePost\";\nimport axios from \"axios\";\nimport { storage } from \"../../../utils/helper\";\n\nclass CreatePostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      flag: false,\n      image: {},\n      imageBool: false,\n      textBool: true,\n      imgSrc:\"\",\n      isWriting: false,\n      isloaderActive: false\n    };\n  }\n\n  componentDidMount(){\n\n  }\n  \n  onSubmitHandler = (event) => {\n    let temp = this.state.data;\n    let details = { userId: localStorage.getItem(\"uid\"), ...temp };\n    axios\n      .post(\"http://localhost:8080/post\", details)\n      .then((response) => {\n        console.log(response);\n        if (response.data.code == 200) {\n          this.setState({ flag: true , data:{},isWriting:false});\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onChangeHandler = (event) => {\n    let data = this.state.data;\n    data[event.target.name] = event.target.value;\n    if(data[event.target.name]!= \"\"){\n      this.setState({isWriting:true})\n    }else{\n      this.setState({isWriting:false})\n    }\n    this.setState({ data});\n    \n    console.log(data);\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.files[0])\n    let file = event.target.files[0];\n    if (file) {\n      this.setState({ image: file});\n      let reader = new FileReader();\n      let url = reader.readAsDataURL(file);\n\n      reader.onloadend = function (e) {\n          this.setState({\n              imgSrc: [reader.result]\n          })\n        }.bind(this);\n          console.log(url)\n        }\n  };\n\n  handleUpload = () => {\n    this.setState({isloaderActive:true});\n    console.log(this.stateimage)\n    let image = this.state.image;\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n        },\n        error => {\n            console.log(error);\n        },\n        () => {\n            storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()\n                .then(url => {\n                    console.log(url);\n                    let data = {\n                        userId:localStorage.getItem(\"uid\"),\n                        imageUrl:url\n                    }\n                    axios.post(`http://localhost:8080/post`, data)\n                    .then(response => {\n                        if(response.data.code === 200){\n                          alert(response.data.msg);\n                          this.setState({image:{}, imgSrc:\"\"})\n                          this.setr\n                        }                         \n                    })\n                    .catch(error => {\n                        console.log(error);\n                    });\n                });\n        }\n    );\n  };\n\n  textClick = () =>{\n    this.setState({imageBool:false, textBool:true})\n  }\n\n  imageClick = () =>{\n    this.setState({imageBool:true, textBool:false})\n  }\n\n  render() {\n    const { data, flag, image, imageBool, textBool, imgSrc, isWriting} = this.state;\n    return (\n      <CreatePost\n        data={data}\n        onSubmitHandler={this.onSubmitHandler}\n        onChangeHandler={this.onChangeHandler}\n        handleUpload={this.handleUpload}\n        handleChange={this.handleChange}\n        imageBool = {imageBool}\n        textBool = {textBool}\n        textClick ={this.textClick}\n        imageClick = {this.imageClick}\n        imgSrc = {imgSrc}\n        isWriting = {isWriting}\n      />\n    );\n  }\n}\n\nexport default CreatePostContainer;\n"]},"metadata":{},"sourceType":"module"}