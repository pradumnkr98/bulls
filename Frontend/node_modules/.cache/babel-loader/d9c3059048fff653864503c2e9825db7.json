{"ast":null,"code":"var _jsxFileName = \"/Users/kraken/Desktop/bulls/src/screens/profile/containers/Profile.js\";\nimport React, { Component } from \"react\";\nimport Profile from \"../components\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { storage } from \"../../../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onExperienceChangeHandler = event => {\n      let experienceDetails = this.state.experienceDetails;\n      experienceDetails[event.target.name] = event.target.value;\n      this.setState({\n        experienceDetails\n      });\n    };\n\n    this.onEducationChangeHandler = event => {\n      let educationDetails = this.state.educationDetails;\n      educationDetails[event.target.name] = event.target.value;\n      this.setState({\n        educationDetails\n      });\n    };\n\n    this.onChangeHandler = event => {\n      let data = this.state.data;\n      data[event.target.name] = event.target.value;\n      this.setState({\n        data\n      });\n    };\n\n    this.onSubmitHandler = event => {\n      debugger;\n      event.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n\n      if (this.state.isImageUploaded && this.state.isPortfolioUploaded) {\n        let details = {\n          name: this.state.data.name,\n          profilePictureUrl: this.state.imgSrc,\n          dob: this.state.data.dob,\n          portfolioUrl: this.state.portfolioSrc,\n          experienceDetails: this.state.experienceDetails,\n          educationDetails: this.state.educationDetails\n        };\n        axios.post(\"http://localhost:8080/user/\" + localStorage.getItem(\"uid\") + \"/profile\", details).then(response => {\n          if (response.data.code === 200) {\n            console.log(response + \" response\");\n            this.setState({\n              flag: true,\n              isSubmitting: false\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.files[0]);\n      let file = event.target.files[0];\n\n      if (file) {\n        this.setState({\n          image: file\n        });\n        let reader = new FileReader();\n        let url = reader.readAsDataURL(file);\n\n        reader.onloadend = function (e) {\n          this.setState({\n            imgSrc: [reader.result]\n          });\n        }.bind(this);\n\n        console.log(url);\n      }\n\n      let image = this.state.image;\n      let portfolio = this.state.portfolio;\n      let userId = localStorage.getItem(\"uid\");\n      const uploadTask = storage.ref(`images/${userId}/${image.name}`).put(image);\n\n      if (image !== \"\") {\n        uploadTask.on(\"state_changed\", snapshot => {}, error => {\n          console.log(error);\n        }, () => {\n          storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n            console.log(url + \" Url\");\n            this.setState({\n              imgSrc: url,\n              isImageUploaded: true\n            });\n          });\n        });\n      }\n    };\n\n    this.uploadPortfolioChangeHandler = event => {\n      console.log(event.target.files[0] + \"portfolio\");\n      let file = event.target.files[0];\n      this.setState({\n        portfolio: file\n      });\n      const uploadPortfolio = storage.ref(`portfolio/${userId}/${portfolio.name}`).put(portfolio);\n\n      if (portfolio !== \"\") {\n        uploadPortfolio.on(\"state_changed\", snapshot => {}, error => {\n          console.log(error);\n        }, () => {\n          storage.ref(\"portfolio\").child(portfolio.name).getDownloadURL().then(url => {\n            console.log(url);\n            console.log(url + \" Url\");\n            this.setState({\n              portfolioSrc: url,\n              isPortfolioUploaded: true\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      data: {\n        name: \"\",\n        dob: \"\",\n        profilePictureUrl: \"\",\n        portfolioUrl: \"\"\n      },\n      experienceDetails: {\n        organisationName: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      educationDetails: {\n        degreeName: \"\",\n        major: \"\",\n        institutionName: \"\",\n        marks: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      flag: false,\n      imgSrc: \"\",\n      image: \"\",\n      isTyping: true,\n      isSubmitting: false,\n      portfolio: \"\",\n      portfolioSrc: \"\",\n      isPortfolioUploaded: false,\n      isImageUploaded: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/user/\" + localStorage.getItem(\"uid\") + \"/profile\").then(response => {\n      if (response.data.code == 200) {\n        console.log(response);\n        this.setState({\n          data: {\n            name: response.data.data.name,\n            dob: response.data.data.dob\n          }\n        });\n      }\n\n      if (response.data.data.profilePictureUrl != null) {\n        this.setState({\n          imgSrc: response.data.data.profilePictureUrl\n        });\n      }\n\n      if (response.data.data.portfolioUrl != null) {\n        this.setState({\n          portfolioSrc: response.data.data.profilePictureUrl\n        });\n      }\n\n      if (response.data.data.educationDetails != null) {\n        this.setState({\n          educationDetails: response.data.data.educationDetails\n        });\n      }\n\n      if (response.data.data.experienceDetails != null) {\n        this.setState({\n          experienceDetails: response.data.data.experienceDetails\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      data,\n      experienceDetails,\n      educationDetails,\n      flag,\n      imgSrc,\n      isSubmitting,\n      portfolioSrc\n    } = this.state;\n\n    if (flag) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/feeds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        detail: data,\n        educationDetails: educationDetails,\n        experienceDetails: experienceDetails,\n        onSubmitHandler: this.onSubmitHandler,\n        onChangeHandler: this.onChangeHandler,\n        onEducationChangeHandler: this.onEducationChangeHandler,\n        onExperienceChangeHandler: this.onExperienceChangeHandler,\n        handleChange: this.handleChange,\n        imgSrc: imgSrc,\n        isSubmitting: isSubmitting,\n        uploadPortfolioChangeHandler: this.uploadPortfolioChangeHandler,\n        portfolioSrc: portfolioSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default ProfileContainer;","map":{"version":3,"sources":["/Users/kraken/Desktop/bulls/src/screens/profile/containers/Profile.js"],"names":["React","Component","Profile","axios","Redirect","storage","ProfileContainer","constructor","props","onExperienceChangeHandler","event","experienceDetails","state","target","name","value","setState","onEducationChangeHandler","educationDetails","onChangeHandler","data","onSubmitHandler","preventDefault","isSubmitting","isImageUploaded","isPortfolioUploaded","details","profilePictureUrl","imgSrc","dob","portfolioUrl","portfolioSrc","post","localStorage","getItem","then","response","code","console","log","flag","catch","error","handleChange","files","file","image","reader","FileReader","url","readAsDataURL","onloadend","e","result","bind","portfolio","userId","uploadTask","ref","put","on","snapshot","child","getDownloadURL","uploadPortfolioChangeHandler","uploadPortfolio","organisationName","startDate","endDate","degreeName","major","institutionName","marks","isTyping","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Profile from \"../components\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { storage } from \"../../../utils/helper\";\n\nclass ProfileContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: { name: \"\", dob: \"\",profilePictureUrl:\"\", portfolioUrl:\"\"},\n      experienceDetails: { organisationName: \"\", startDate: \"\", endDate: \"\" },\n      educationDetails: {\n        degreeName: \"\",\n        major: \"\",\n        institutionName: \"\",\n        marks: \"\",\n        startDate: \"\",\n        endDate: \"\",\n      },\n      flag: false,\n      imgSrc:\"\",\n      image:\"\",\n      isTyping:true,\n      isSubmitting:false,\n      portfolio:\"\",\n      portfolioSrc:\"\",\n      isPortfolioUploaded:false,\n      isImageUploaded:false\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://localhost:8080/user/\" +\n          localStorage.getItem(\"uid\") +\n          \"/profile\"\n      )\n      .then((response) => {\n        if (response.data.code == 200) {\n          console.log(response)\n          this.setState({\n            data: {\n              name: response.data.data.name,\n              dob: response.data.data.dob,\n\n            }\n          });\n        }\n\n        if(response.data.data.profilePictureUrl !=null){\n          this.setState({imgSrc: response.data.data.profilePictureUrl});\n        }\n\n        if(response.data.data.portfolioUrl !=null){\n          this.setState({portfolioSrc: response.data.data.profilePictureUrl});\n        }\n\n        if(response.data.data.educationDetails != null){\n          this.setState({educationDetails:response.data.data.educationDetails, });\n        }\n\n        if(response.data.data.experienceDetails !=null){\n          this.setState({experienceDetails:response.data.data.experienceDetails});\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onExperienceChangeHandler = (event) => {\n    let experienceDetails = this.state.experienceDetails;\n    experienceDetails[event.target.name] = event.target.value;\n    this.setState({ experienceDetails });\n  };\n\n  onEducationChangeHandler = (event) => {\n    let educationDetails = this.state.educationDetails;\n    educationDetails[event.target.name] = event.target.value;\n    this.setState({ educationDetails });\n  };\n\n  onChangeHandler = (event) => {\n    let data = this.state.data;\n    data[event.target.name] = event.target.value;\n    this.setState({ data });\n  };\n\n  onSubmitHandler = (event) => {\n    debugger\n    event.preventDefault();\n    this.setState({isSubmitting:true})\n    \n    if(this.state.isImageUploaded && this.state.isPortfolioUploaded){\n      let details = { name: this.state.data.name,\n      profilePictureUrl: this.state.imgSrc,\n      dob: this.state.data.dob,\n      portfolioUrl: this.state.portfolioSrc,\n      experienceDetails: this.state.experienceDetails,\n      educationDetails: this.state.educationDetails}\n      \n      axios.post(\"http://localhost:8080/user/\" + localStorage.getItem(\"uid\") + \"/profile\",details)\n      .then((response) => {\n        if (response.data.code === 200) {\n          console.log(response+\" response\");\n          this.setState({ flag: true ,isSubmitting:false});\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.files[0])\n    let file = event.target.files[0];\n    if (file) {\n      \n      this.setState({ image: file});\n      let reader = new FileReader();\n      let url = reader.readAsDataURL(file);\n\n      reader.onloadend = function (e) {\n          this.setState({\n              imgSrc: [reader.result]\n          })\n        }.bind(this);\n          console.log(url)\n    }\n\n    let image = this.state.image;\n    let portfolio = this.state.portfolio;\n    let userId = localStorage.getItem(\"uid\");\n    const uploadTask = storage.ref(`images/${userId}/${image.name}`).put(image);\n    if(image !== \"\"){\n      uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n        },\n        error => {\n            console.log(error);\n        },\n        () => {\n            storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()\n                .then(url => {\n                    console.log(url+\" Url\");\n                    this.setState({imgSrc:url, isImageUploaded:true})  \n                });\n        }\n      );\n    } \n\n  };\n\n  uploadPortfolioChangeHandler = (event) =>{\n    console.log(event.target.files[0]+\"portfolio\")\n    let file = event.target.files[0];\n    this.setState({ portfolio: file});\n\n    const uploadPortfolio = storage.ref(`portfolio/${userId}/${portfolio.name}`).put(portfolio);\n    if(portfolio !== \"\"){\n      uploadPortfolio.on(\n        \"state_changed\",\n        snapshot => {\n        },\n        error => {\n            console.log(error);\n        },\n        () => {\n            storage\n                .ref(\"portfolio\")\n                .child(portfolio.name)\n                .getDownloadURL()\n                .then(url => {\n                    console.log(url);\n                    console.log(url+\" Url\");\n                    this.setState({portfolioSrc:url, isPortfolioUploaded:true});  \n                });\n        }\n      );\n    } \n  }\n\n\n  render() {\n    const { data, experienceDetails, educationDetails, flag, imgSrc , isSubmitting, portfolioSrc} = this.state;\n\n    if (flag) {\n      return(<Redirect to=\"/feeds\" />);\n    }\n    return (\n      <>\n        <Profile\n          detail={data}\n          educationDetails={educationDetails}\n          experienceDetails={experienceDetails}\n          onSubmitHandler={this.onSubmitHandler}\n          onChangeHandler={this.onChangeHandler}\n          onEducationChangeHandler={this.onEducationChangeHandler}\n          onExperienceChangeHandler={this.onExperienceChangeHandler}\n          handleChange = {this.handleChange}\n          imgSrc = {imgSrc}\n          isSubmitting = {isSubmitting}\n          uploadPortfolioChangeHandler = {this.uploadPortfolioChangeHandler}\n          portfolioSrc = {portfolioSrc}\n        />\n      </>\n    );\n  }\n}\n\nexport default ProfileContainer;\n"]},"metadata":{},"sourceType":"module"}